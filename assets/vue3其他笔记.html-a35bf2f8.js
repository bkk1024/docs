import{_ as e,W as o,X as c,Y as n,Z as s,$ as p,a0 as a,C as l}from"./framework-4f54a744.js";const i="/docs/assets/image-20220906111357724-c81dd876.png",u="/docs/assets/image-20220906111616575-2a633552.png",r="/docs/assets/image-20220906111653497-890c96cd.png",d="/docs/assets/image-20220907162823360-57ed4296.png",k={},v=a('<h1 id="vue3-其他笔记" tabindex="-1"><a class="header-anchor" href="#vue3-其他笔记" aria-hidden="true">#</a> vue3 其他笔记</h1><h2 id="问题及解决方法" tabindex="-1"><a class="header-anchor" href="#问题及解决方法" aria-hidden="true">#</a> 问题及解决方法</h2><h3 id="_1、路由跳转白屏问题" tabindex="-1"><a class="header-anchor" href="#_1、路由跳转白屏问题" aria-hidden="true">#</a> 1、路由跳转白屏问题</h3><ul><li><p>问题：我此处遇到的问题是因路由中携带太多参数，而传递时某些参数为空导致路由中存在<code>双斜线(//)</code>的问题，因此页面白屏。</p><p><img src="'+i+'" alt="image-20220906111357724"></p></li><li><p>解决办法：</p><ol><li><p>将路由文件中多参数集合为单参数</p></li><li><p>路由传递时：</p><p><img src="'+u+'" alt="image-20220906111616575"></p></li><li><p>路由接收时：</p><p><img src="'+r+`" alt="image-20220906111653497"></p></li></ol></li></ul><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><h3 id="_1、通过-token-是否存在来判断是否重定向到其他页面" tabindex="-1"><a class="header-anchor" href="#_1、通过-token-是否存在来判断是否重定向到其他页面" aria-hidden="true">#</a> 1、通过 token 是否存在来判断是否重定向到其他页面</h3><ol><li><p>在 route 文件中有<code>/ 重定向到 login 的配置</code></p></li><li><p><code>token</code> 保存在 <code>localStorage</code> 中</p></li><li><p>在 route 的 <code>index.js</code> 文件中做全局路由守卫</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">&quot;login&quot;</span> <span class="token operator">&amp;&amp;</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;home&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_2、在-node-js-中生成和解析-token" tabindex="-1"><a class="header-anchor" href="#_2、在-node-js-中生成和解析-token" aria-hidden="true">#</a> 2、在 node.js 中生成和解析 token</h3>`,8),m=n("li",null,[n("p",null,[s("使用 "),n("code",null,"jsonwebtoken"),s(" 插件，生成 JWT 的 token 字符串")])],-1),g=n("p",null,[s("使用 "),n("code",null,"express-jwt"),s(" 插件，解析前端发送的 token 字符串")],-1),h=n("ul",null,[n("li",null,[s("该插件解析的是保存在 "),n("code",null,"Authorization"),s(" 中的 token")])],-1),b={href:"https://www.cnblogs.com/wjy00/p/15916738.html",target:"_blank",rel:"noopener noreferrer"},_=a('<li><p>在前端请求时在请求头中使用 <code>Authorization</code> 携带 token</p><ul><li><p>这里可能会报错：</p><p><img src="'+d+`" alt="image-20220907162823360"></p></li><li><p>这个报错的意思是 <code>Authorization</code> 在 <code>Access-Control-Allow-Headers</code> 中没有被允许携带</p></li><li><p>解决办法：在后端接口文件的 <code>app.js</code> 中添加以下代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
	res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Authorization, Content-Type, Content-Length, Accept, X-Requested-With, sessionToken&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">// 这里的 sessionToken 为自定义的一个请求头</span>
	res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Methods&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PUT, POST, GET, DELETE, OPTIONS&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 这里也可以直接写 * 允许所有</span>
	<span class="token comment">// 设置 options 请求快速响应</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>methd<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;options&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li>`,1),f=a(`<h3 id="_3、使用自定义指令实现搜索框自动聚焦" tabindex="-1"><a class="header-anchor" href="#_3、使用自定义指令实现搜索框自动聚焦" aria-hidden="true">#</a> 3、使用自定义指令实现搜索框自动聚焦</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	<span class="token comment">// 在模板中启用 v-focus</span>
	<span class="token keyword">const</span> vFocus <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token function-variable function">mounted</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-focus</span> <span class="token punctuation">/&gt;</span></span>
	<span class="token comment">&lt;!-- 这种指令写法比 \`autofocus\` attribute 更有用，因为不仅可以在页面加载完成后生效，还可以在 Vue 动态插入元素后生效 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),q={href:"https://cn.vuejs.org/guide/reusability/custom-directives.html#directive-hooks",target:"_blank",rel:"noopener noreferrer"},w=a(`<h3 id="_4、在-vue3-中使用-element-plus" tabindex="-1"><a class="header-anchor" href="#_4、在-vue3-中使用-element-plus" aria-hidden="true">#</a> 4、在 Vue3 中使用 Element-plus</h3><p>这里为全局注册进行使用。</p><ol><li><p>导入组件</p><p><code>import { ElRow, ElCol, ElCard, ... } from &#39;element-plus&#39;</code></p></li><li><p>导入样式</p><p><code>import &#39;element-plus/dist/index.css&#39;</code></p></li><li><p>导入 icon 图标，如果需要使用的话</p><p><code>import { Plus, ZoomIn, Download, ... } from &#39;@element-plus/icons-vue&#39;</code></p></li><li><p>在 <code>main.js</code> 文件中全局注册</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>
<span class="token operator">...</span> <span class="token comment">// 导入组件、样式等</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

<span class="token comment">// 全局注册</span>
<span class="token keyword">const</span> ElComponents <span class="token operator">=</span> <span class="token punctuation">[</span>ElRow<span class="token punctuation">,</span> ElCol<span class="token punctuation">,</span> ElCard<span class="token punctuation">]</span>
ElComponents<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ElIcons <span class="token operator">=</span> <span class="token punctuation">[</span>Plus<span class="token punctuation">,</span> ZoomIn<span class="token punctuation">,</span> Download<span class="token punctuation">]</span>
ElIcons<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
	<span class="token comment">&lt;!-- 使用组件 --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span> <span class="token attr-name">:gutter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>12<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-card</span><span class="token punctuation">&gt;</span></span>
				<span class="token comment">&lt;!-- 使用icon图标 --&gt;</span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-icon</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Plus</span> <span class="token punctuation">/&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-icon</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-card</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_5、input-限制输入数字和长度" tabindex="-1"><a class="header-anchor" href="#_5、input-限制输入数字和长度" aria-hidden="true">#</a> 5、input 限制输入数字和长度</h3><p>使用正则表达式控制输入的类型为整数，maxlength 限制输入长度</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password = password.replace(/[^\\d]/g, &#39;&#39;)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function x(E,j){const t=l("ExternalLinkIcon");return o(),c("div",null,[v,n("ol",null,[m,n("li",null,[g,h,n("p",null,[n("a",b,[s("生成和解析 token"),p(t)])])]),_]),f,n("p",null,[n("a",q,[s("指令钩子"),p(t)])]),w])}const A=e(k,[["render",x],["__file","vue3其他笔记.html.vue"]]);export{A as default};
