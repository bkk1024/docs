import{_ as n,W as s,X as a,a0 as e}from"./framework-4f54a744.js";const t={},p=e(`<h1 id="vuex" tabindex="-1"><a class="header-anchor" href="#vuex" aria-hidden="true">#</a> vuex</h1><h2 id="_1、vuex-是什么" tabindex="-1"><a class="header-anchor" href="#_1、vuex-是什么" aria-hidden="true">#</a> 1、vuex 是什么</h2><p>vuex 是专为 vue 开发的状态管理模式，它其中的状态存储是响应式的，即当组件使用了 vuex 的状态，当它变化时，这个组件也会跟着改变。<strong>不能之恶修改 vuex 的状态，修改的唯一途径就是 mutations</strong>。</p><h2 id="_2、vuex-有哪些东西" tabindex="-1"><a class="header-anchor" href="#_2、vuex-有哪些东西" aria-hidden="true">#</a> 2、vuex 有哪些东西</h2><ol><li><p><code>state</code>：用来存储状态</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取 state</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>actions</code>：用来解决<strong>异步流程</strong>改变 state 数据，通过提交<code>mutations</code>来修改数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token number">1</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&quot;actionsFn&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>mutations</code>：修改仓库中 state 的唯一办法，<strong>它是同步的</strong>，使用<code>commit</code>进行提交</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token number">1</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&quot;mutationsFn&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>getters</code>：是 store 的计算属性，类似 vue 中的<code>computed</code>，用来对 state 中给的数据进行一些过滤、改造等</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">newCount</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取 getters </span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">newCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>newCount
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>modules</code>：模块化vuex，将vuex分模块，更好维护</p></li></ol><h2 id="_3、actions-和-mutations-的区别" tabindex="-1"><a class="header-anchor" href="#_3、actions-和-mutations-的区别" aria-hidden="true">#</a> 3、actions 和 mutations 的区别</h2><p>主要的区别在于mutations 只能是同步操作，，action 可以包含异步操作，而且可以通过 action 来提交 mutations。</p><h2 id="_4、vuex在哪些场景下使用" tabindex="-1"><a class="header-anchor" href="#_4、vuex在哪些场景下使用" aria-hidden="true">#</a> 4、vuex在哪些场景下使用</h2><ol><li>用户的个人信息</li><li>购物车模块</li><li>订单模块</li><li>...</li></ol><h2 id="_5、vuex的响应式处理" tabindex="-1"><a class="header-anchor" href="#_5、vuex的响应式处理" aria-hidden="true">#</a> 5、vuex的响应式处理</h2><p>vue2中：</p><p>使用vuex时，需要执行<code>Vue.use(vuex)</code>，最终会执行到vuex的install方法，通过<code>applyMixin(vue)</code>在任意组件内执行<code>this.$store</code>就可以访问到store对象。</p><p>vuex的state是响应式的，借助的是vue的data，将state存到vue实例组件的data中，就可以实现vuex的state响应式。</p><p>最后我们触发事件时，会通过dispatch来访问到actions中的方法，actions中的commit会触发mutations中的方法，从而更改state中的值，因为state被绑定到了vue实例的data中，因此就会触发视图变化。</p>`,14),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","vuex.html.vue"]]);export{r as default};
