import{_ as n,W as s,X as a,a0 as t}from"./framework-4f54a744.js";const e="/docs/assets/image-20230301220836756-60c875f0.png",p="/docs/assets/image-20230301221037854-e96177fd.png",o={},c=t(`<h1 id="ts-使用-promise" tabindex="-1"><a class="header-anchor" href="#ts-使用-promise" aria-hidden="true">#</a> TS 使用 Promise</h1><p>如果我们不指定返回的类型，ts 是推断不出来<code>Promsie</code>返回的是什么类型的，会返回<code>unkonwn</code>。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span>time<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+`" alt="image-20230301220836756"></p><p>把上面的代码改为如下即可：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span>time<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+p+`" alt="image-20230301221037854"></p><blockquote><p>当我们在 ts 文件中使用<code>Promise</code>时，可能会报如下错误：</p><ul><li><span style="color:red;">“Promise” 仅指类型，但在此处用作值。是否需要更改目标库? 请尝试将 “lib” 编译器选项更改为 es2015 或更高版本。</span></li><li><span style="color:red;">&#39;Promise&#39; only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the &#39;lib&#39; compiler option to es2015 or later.</span></li></ul><p>当出现这样的错误时，可以修改<code>tsconfig.json</code>配置文件，如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token comment">// 方式一，指定 target 为 ES6 或者 ES2015</span>
		<span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ES6&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定TS被编译为的JS版本</span>

		<span class="token comment">// 方式二，添加 ES2015.Promise</span>
		<span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ES2015.Promise&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ES5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DOM&quot;</span><span class="token punctuation">]</span> <span class="token comment">// 用来指定项目中要使用的库，这里可以解决 ts 中使用 Promise 报错的问题</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>`,8),i=[c];function l(u,r){return s(),a("div",null,i)}const k=n(o,[["render",l],["__file","ts使用Promise.html.vue"]]);export{k as default};
