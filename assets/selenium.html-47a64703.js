import{_ as p,W as o,X as i,Y as n,Z as s,$ as a,a0 as e,C as l}from"./framework-4f54a744.js";const c="/docs/assets/image-20230522151353925-46a1dd16.png",d="/docs/assets/image-20230523154425251-4aa2583e.png",r={},u=e(`<h1 id="selenium" tabindex="-1"><a class="header-anchor" href="#selenium" aria-hidden="true">#</a> Selenium</h1><h2 id="安装-selenium" tabindex="-1"><a class="header-anchor" href="#安装-selenium" aria-hidden="true">#</a> 安装 selenium</h2><p><code>pip install selenium</code></p><p>笔记编写时，selenium 版本为 4.9.1</p><h2 id="下载浏览器驱动器" tabindex="-1"><a class="header-anchor" href="#下载浏览器驱动器" aria-hidden="true">#</a> 下载浏览器驱动器</h2><p>chrome 浏览器驱动：https://chromedriver.storage.googleapis.com/index.html</p><h2 id="首先要导入的各个模块和其作用" tabindex="-1"><a class="header-anchor" href="#首先要导入的各个模块和其作用" aria-hidden="true">#</a> 首先要导入的各个模块和其作用</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 浏览器驱动模块</span>
<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver
<span class="token comment"># 获取标签元素时，需要使用 By.ID | By.Class_Name 等，</span>
<span class="token comment"># 这是版本4后的新写法</span>
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By
<span class="token comment"># 导入睡眠模块，可以让程序休眠一段时间</span>
<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第一个案例-自动使用百度搜索" tabindex="-1"><a class="header-anchor" href="#第一个案例-自动使用百度搜索" aria-hidden="true">#</a> 第一个案例：自动使用百度搜索</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By
<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep

<span class="token comment"># 这里书写驱动器的路径，相对路径或者绝对路径</span>
<span class="token comment"># 如果将驱动器配置到了系统的环境变量中，也可以不写</span>
driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token string">r&quot;./chromedriver/chromedriver.exe&quot;</span><span class="token punctuation">)</span>
driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://www.baidu.com&quot;</span><span class="token punctuation">)</span>

<span class="token builtin">input</span> <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">&quot;kw&quot;</span><span class="token punctuation">)</span>
button <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">&quot;su&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 向文本框输入内容</span>
<span class="token builtin">input</span><span class="token punctuation">.</span>set_keys<span class="token punctuation">(</span><span class="token string">&quot;selenium&quot;</span><span class="token punctuation">)</span>
button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment"># 关闭浏览器</span>
driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="by-有几种选择器" tabindex="-1"><a class="header-anchor" href="#by-有几种选择器" aria-hidden="true">#</a> By 有几种选择器</h2><p><img src="`+c+'" alt="./image-20230522151353925"></p>',12),m=n("thead",null,[n("tr",null,[n("th",null,"选择器名称"),n("th",null,"选择器内容"),n("th",null,"描述")])],-1),k=n("tr",null,[n("td",null,"ID"),n("td",null,'"id"'),n("td",null,"id 选择器")],-1),v=n("td",null,"XPATH",-1),b=n("td",null,'"xpath"',-1),h={href:"https://zhuanlan.zhihu.com/p/29436838",target:"_blank",rel:"noopener noreferrer"},_=n("tr",null,[n("td",null,"LINK_TEXT"),n("td",null,'"link text"'),n("td",null,"超链接")],-1),y=n("tr",null,[n("td",null,"PARTIAL_LINK_TEXT"),n("td",null,'"partial link text"'),n("td",null,"超链接部分文本")],-1),f=n("tr",null,[n("td",null,"NAME"),n("td",null,'"name"'),n("td",null,"name 属性")],-1),g=n("tr",null,[n("td",null,"TAG_NAME"),n("td",null,'"tag name"'),n("td",null,"标签选择器")],-1),w=n("tr",null,[n("td",null,"CLASS_NAME"),n("td",null,'"class name"'),n("td",null,"类选择器")],-1),x=n("td",null,"CSS_SELECTOR",-1),q=n("td",null,'"class selector"',-1),S={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors",target:"_blank",rel:"noopener noreferrer"},C=e(`<h2 id="最大化窗口" tabindex="-1"><a class="header-anchor" href="#最大化窗口" aria-hidden="true">#</a> 最大化窗口</h2><p><code>driver.maximize_window()</code></p><h2 id="使用类-class-改写第一个案例" tabindex="-1"><a class="header-anchor" href="#使用类-class-改写第一个案例" aria-hidden="true">#</a> 使用类（class），改写第一个案例</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By
<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep

<span class="token keyword">class</span> <span class="token class-name">TestCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token string">r&quot;./chromedriver/chromedriver.exe&quot;</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://www.baidu.com&quot;</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>maximize_window<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">pass</span>

  <span class="token keyword">def</span> <span class="token function">TestId</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">&quot;kw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">&quot;selenium&quot;</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">&quot;kw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>__name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">case</span> <span class="token operator">=</span> TestCase<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">case</span><span class="token punctuation">.</span>TestId<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查找元素" tabindex="-1"><a class="header-anchor" href="#查找元素" aria-hidden="true">#</a> 查找元素</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回找到的第一个匹配的元素</span>
driver<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回找到的所有匹配的元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>id 只有唯一一个</p></blockquote><h2 id="webdriver-常用属性" tabindex="-1"><a class="header-anchor" href="#webdriver-常用属性" aria-hidden="true">#</a> webDriver 常用属性</h2><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>浏览器名称</td></tr><tr><td>current_url</td><td>当前 url</td></tr><tr><td>title</td><td>当前页面标题</td></tr><tr><td>page_source</td><td>当前页面源码</td></tr><tr><td>current_window_handle</td><td>窗口句柄</td></tr><tr><td>window_handles</td><td>当前窗口所有句柄</td></tr></tbody></table><h2 id="webdriver-常用方法" tabindex="-1"><a class="header-anchor" href="#webdriver-常用方法" aria-hidden="true">#</a> webDriver 常用方法</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>back()</td><td>浏览器后退</td></tr><tr><td>forward()</td><td>浏览器前进</td></tr><tr><td>refresh()</td><td>浏览器刷新</td></tr><tr><td>close()</td><td>关闭当前窗口</td></tr><tr><td>quit()</td><td>退出浏览器</td></tr><tr><td>switch<em>to</em>.frame()</td><td>切换到 frame</td></tr><tr><td>switch_to.alert()</td><td>切换到 alert</td></tr><tr><td>switch_to.active_element</td><td>切换到活动元素</td></tr></tbody></table><h2 id="元素的属性" tabindex="-1"><a class="header-anchor" href="#元素的属性" aria-hidden="true">#</a> 元素的属性</h2><p>使用<code>find_element</code>获取到元素后，可以读取的一些属性</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>id</td></tr><tr><td>size</td><td>宽高</td></tr><tr><td>rect</td><td>宽高和坐标</td></tr><tr><td>tag_name</td><td>标签名称</td></tr><tr><td>text</td><td>文本内容</td></tr></tbody></table><h2 id="元素的方法" tabindex="-1"><a class="header-anchor" href="#元素的方法" aria-hidden="true">#</a> 元素的方法</h2><p>使用<code>find_element</code>获取到元素后，可以使用的一些方法</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>send_keys()</td><td>输入内容</td></tr><tr><td>clear()</td><td>清空内容</td></tr><tr><td>click()</td><td>单击</td></tr><tr><td>get_attribute()</td><td>获取属性值</td></tr><tr><td>is_selected()</td><td>是否被选中</td></tr><tr><td>is_enabled()</td><td>是否可用</td></tr><tr><td>is_displayed()</td><td>是否显示</td></tr><tr><td>value_of_css_property()</td><td>css 属性值</td></tr></tbody></table><h2 id="下拉列表操作" tabindex="-1"><a class="header-anchor" href="#下拉列表操作" aria-hidden="true">#</a> 下拉列表操作</h2><p>处理下拉列表，需要用到 Selenium 中的一个工具类 Select，下面列出常用方法和属性</p><table><thead><tr><th>方法/属性</th><th>描述</th></tr></thead><tbody><tr><td>select_by_value()</td><td>根据值选择</td></tr><tr><td>select_by_index()</td><td>根据索引选择</td></tr><tr><td>select_by_visible_text()</td><td>根据文本选择</td></tr><tr><td>deselect_by_value()</td><td>根据值反选</td></tr><tr><td>deselect_by_index()</td><td>根据所有反选</td></tr><tr><td>deselect_by_visible_text()</td><td>根据文本反选</td></tr><tr><td>deselect_all()</td><td>反选所有</td></tr><tr><td>options</td><td>所有选项</td></tr><tr><td>all_selected_options</td><td>所有选中项</td></tr><tr><td>firse_selected_option</td><td>第一个选中项</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support<span class="token punctuation">.</span>select <span class="token keyword">import</span> Select

<span class="token comment"># 定位下拉列表</span>
select_element <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>TAG_NAME<span class="token punctuation">,</span> <span class="token string">&quot;select&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 实例化工具类 Select</span>
select <span class="token operator">=</span> Select<span class="token punctuation">(</span>select_element<span class="token punctuation">)</span>
<span class="token comment"># 根据值选择内容</span>
select<span class="token punctuation">.</span>select_by_value<span class="token punctuation">(</span><span class="token string">&quot;具体value值&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="操作弹窗-alert、confirm、prompt" tabindex="-1"><a class="header-anchor" href="#操作弹窗-alert、confirm、prompt" aria-hidden="true">#</a> 操作弹窗，alert、confirm、prompt</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 三种弹窗都使用这个方法获取</span>
alert <span class="token operator">=</span> driver<span class="token punctuation">.</span>switch_to_alert
confirm <span class="token operator">=</span> driver<span class="token punctuation">.</span>switch_to_alert
prompt <span class="token operator">=</span> driver<span class="token punctuation">.</span>switch_to_alert

alert<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 确定</span>
confirm<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 确定</span>
confirm<span class="token punctuation">.</span>dismiss<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 取消</span>
prompt<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 确定</span>
prompt<span class="token punctuation">.</span>dismiss<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 取消</span>

alert<span class="token punctuation">.</span>text <span class="token comment"># 文本内容</span>
confirm<span class="token punctuation">.</span>text <span class="token comment"># 文本内容</span>
prompt<span class="token punctuation">.</span>text <span class="token comment"># 文本内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="selenium-三种等待方式" tabindex="-1"><a class="header-anchor" href="#selenium-三种等待方式" aria-hidden="true">#</a> Selenium 三种等待方式</h2><ol><li><p>sleep()：一般不建议使用，脚本调试时可以使用，更方便</p></li><li><p>implicitly_wait（隐式等待）：对整个 driver 周期都起作用，在最开始设置一次就可以了，不要当作固定等待使用</p></li><li><p>WebDriverWait（显示等待）：最常用的方式，使用的是 Selenium 提供的等待模块</p><p><code>from selenium.webdriver.support.wait import WebDriverWait</code></p></li></ol><p>WebDriverWait 参数：</p><ol><li>dirver：传入 WebDriver 实例</li><li>timeout：设置超时时间</li><li>poll_frequency：调用 until 或 until_not 中的方法的间隔时间，默认 0.5s</li><li>ignored_exceptions：忽略的异常</li></ol><p>这个模块只有两个方法：until 和 until_not。方法的参数如下：</p><ol><li>method：等待期间，每隔一段时间调用传入的方法，知道返回值不是 False</li><li>message：如果超市，抛出 TimeoutException，将 message 传入异常</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support<span class="token punctuation">.</span>wait <span class="token keyword">import</span> WebDriverWait
<span class="token comment"># 这个模块里面有一些期待的等待条件，后面详细解释</span>
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support <span class="token keyword">import</span> expected_conditions

wait <span class="token operator">=</span> WebDriverWait<span class="token punctuation">(</span>driver<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
wait<span class="token punctuation">.</span>until<span class="token punctuation">(</span>expected_conditions<span class="token punctuation">.</span>title_is<span class="token punctuation">(</span><span class="token string">&quot;百度一下，你就知道&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="expected-conditions-模块中的一些等待条件" tabindex="-1"><a class="header-anchor" href="#expected-conditions-模块中的一些等待条件" aria-hidden="true">#</a> expected_conditions 模块中的一些等待条件</h2><table><thead><tr><th>条件</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>title_is()</td><td>判断 title 是否出现</td><td>boolean</td></tr><tr><td>title_contains()</td><td>判断 title 是否包含某些字符</td><td>boolean</td></tr><tr><td>presence_of_element_located()</td><td>判断某个元素是否被加入到了 DOM 树中，并不代表该元素一定可见</td><td>WebElement</td></tr><tr><td>visibility_of_element_located()</td><td>判断某个元素是否被添加到了 DOM 树中，并且这个元素可见，宽高都大于 0</td><td>WebElement</td></tr><tr><td>visibility_of()</td><td>判断这个元素是否可见，可见就返回这个元素</td><td>WebElement</td></tr><tr><td>presence_of_all_elements_located()</td><td>判断是否至少有一个元素存在于 DOM 树中</td><td>列表</td></tr><tr><td>visibility_of_any_elements_located()</td><td>判断是否至少有一个元素在页面中可见</td><td>列表</td></tr><tr><td>text_to_be_present_in_element()</td><td>判断指定的元素中是否包含预期的字符串</td><td>boolean</td></tr><tr><td>text_to_be_present_in_element_value()</td><td>判断指定的元素的属性值中是否包含了预期的字符串</td><td>boolean</td></tr><tr><td>frame_to_be_available_and_switch_to_it()</td><td>判断该 frame 是否可以 switch 进去</td><td>boolean</td></tr><tr><td>invisibility_of_element_located()</td><td>判断某个元素是否存在于 DOM 中或者不可见</td><td>boolean</td></tr><tr><td>element_to_be_clickable()</td><td>判断某个元素是否可见并且可以点击</td><td>boolean</td></tr><tr><td>staleness_of()</td><td>等待某个元素从 DOM 树中移除</td><td>boolean</td></tr><tr><td>element_to_be_selected()</td><td>判断某个元素是否被选中了，一般用在下拉列表</td><td>boolean</td></tr><tr><td>element_selection_state_to_be()</td><td>判断某个元素的选中状态是否符合预期</td><td>boolean</td></tr><tr><td>element_located_selection_state_to_be()</td><td>判断某个元素的选中状态似乎否符合预期</td><td>boolean</td></tr><tr><td>alert_is_present()</td><td>判断页面上是否存在 alert</td><td>alert</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 引入模块</span>
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support <span class="token keyword">import</span> expected_conditions
<span class="token comment"># 或者给个别名，这样代码更加精简</span>
<span class="token comment"># from selenium.webdriver.support import expected_conditions as EC</span>

<span class="token comment"># 使用方法</span>
expected_conditions<span class="token punctuation">.</span>title_is<span class="token punctuation">(</span><span class="token string">&quot;百度一下，你就知道&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 别名使用</span>
<span class="token comment"># EC.title_is(&quot;百度一下，你就知道&quot;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="selenium-鼠标和键盘事件" tabindex="-1"><a class="header-anchor" href="#selenium-鼠标和键盘事件" aria-hidden="true">#</a> Selenium 鼠标和键盘事件</h2><p>Selenium 中的鼠标和键盘事件被封装在<code>ActionChains</code>类中，需要先实例化这个类</p><p>它是一个动作链，可以使用很多方法，最后一起执行。</p><p>事件如下：</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>click(on_element = None)</td><td>单击鼠标左键</td></tr><tr><td>click_and_hold(on_element = None)</td><td>点击鼠标左键，不松开</td></tr><tr><td>context_click(on_element = None)</td><td>点击鼠标右键</td></tr><tr><td>double_click(on_element = None)</td><td>双击鼠标左键</td></tr><tr><td>drag_and_drop(source, target)</td><td>拖拽到某个元素，然后松开</td></tr><tr><td>drag_and_drop_by_offset(source, xoffset, yoffset)</td><td>拖拽到某个坐标，然后松开</td></tr><tr><td>key_down(value, element = None)</td><td>按下某个键盘上的键</td></tr><tr><td>key_up(value, element = None)</td><td>松开键盘上的某个键</td></tr><tr><td>move_by_offset(xoffset, yoffset)</td><td>鼠标从当前位置，移动到某个坐标</td></tr><tr><td>move_to_element(to_element)</td><td>鼠标移动到某个元素</td></tr><tr><td>move_to_element_with_offset(to_element, xoffset, yoffset)</td><td>移动到距离某个元素（左上角坐标）多少距离的位置</td></tr><tr><td>perform()</td><td>执行链中的所有动作</td></tr><tr><td>release(on_element = None)</td><td>在某个元素位置松开鼠标左键</td></tr><tr><td>send_keys(*keys_to_send)</td><td>发送某个键到当前焦点的元素</td></tr><tr><td>send_keys_to_element(element, *keys_to_send)</td><td>发送某个键到指定元素</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入ActionChains模块</span>
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver <span class="token keyword">import</span> ActionChains
<span class="token comment"># 导入键盘的 Keys 类</span>
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>keys <span class="token keyword">import</span> Keys

<span class="token comment"># 使用一：链式写法</span>
ActionChains<span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>btn<span class="token punctuation">)</span><span class="token punctuation">.</span>perform<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 使用二：分步写法</span>
action <span class="token operator">=</span> ActionChains<span class="token punctuation">(</span>driver<span class="token punctuation">)</span>
action<span class="token punctuation">.</span>click<span class="token punctuation">(</span>btn<span class="token punctuation">)</span>
action<span class="token punctuation">.</span>perform<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 键盘方法，这里是执行了 control + a 操作</span>
<span class="token builtin">input</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>CONTROL<span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="selenium-执行-js-脚本" tabindex="-1"><a class="header-anchor" href="#selenium-执行-js-脚本" aria-hidden="true">#</a> Selenium 执行 js 脚本</h2><p>这里分为同步和异步脚本</p><ol><li>同步：execute_script()</li><li>异步：exrcute_async_script()</li></ol><h3 id="例子-滚动到页面底部" tabindex="-1"><a class="header-anchor" href="#例子-滚动到页面底部" aria-hidden="true">#</a> 例子：滚动到页面底部</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>js <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
      let scrollHeight = document.body.scrollHeight;
      window.scrollTo(0, scrollHeight);
    &quot;&quot;&quot;</span>
driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span>js<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="selenium-屏幕截图" tabindex="-1"><a class="header-anchor" href="#selenium-屏幕截图" aria-hidden="true">#</a> Selenium 屏幕截图</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>save_screenshot(filename)</td><td>获取当前屏幕截图，并保存为指定文件，filename 为指定保存路径或者图片的文件名</td></tr><tr><td>get_screenshot_as_base64()</td><td>获取当前屏幕截图 base64 编码字符串</td></tr><tr><td>get_screenshot_as_file(filename)</td><td>获取当前屏幕截图，使用完整的路径</td></tr><tr><td>get_screenshot_as_png()</td><td>获取当前屏幕截图的二进制文件数据</td></tr></tbody></table><h2 id="selenium-定位-frame-iframe" tabindex="-1"><a class="header-anchor" href="#selenium-定位-frame-iframe" aria-hidden="true">#</a> Selenium 定位 frame iframe</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>switch_to.frame(reference)</td><td>切换 frame，reference 是传入的参数，用来定位 frame，可以传入 id、name、index 以及 selenium 的 WebElement 对象</td></tr><tr><td>switch_to.default_content()</td><td>返回主文档</td></tr><tr><td>switch_to.parent_frame()</td><td>返回父文档</td></tr></tbody></table><h2 id="使用-pytesseract-模块和-pillow-模块实现验证码识别" tabindex="-1"><a class="header-anchor" href="#使用-pytesseract-模块和-pillow-模块实现验证码识别" aria-hidden="true">#</a> 使用 pytesseract 模块和 Pillow 模块实现验证码识别</h2><p>一般用来识别一些简单的验证码，如下这类</p><p><img src="`+d+`" alt="image-20230523154425251"></p><ul><li><p>安装 pytesseract 和 Pillow</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> pytesseract
pip <span class="token function">install</span> Pillow
<span class="token comment"># 我安装时提示已经存在这个模块</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>整体思路如下：</p><ol><li>截屏整个页面</li><li>获取验证码的左上角和右下角坐标</li><li>根据坐标抠图</li><li>使用 pytesseract 模块进行验证</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> os
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By

<span class="token keyword">def</span> <span class="token function">get_code_img</span><span class="token punctuation">(</span>driver<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token comment"># 先将浏览器全屏</span>
  driver<span class="token punctuation">.</span>maximize_window<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment"># 获取验证码图片</span>
  t <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
  path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\\\screenshots&quot;</span>
  picture_name1 <span class="token operator">=</span> path <span class="token operator">+</span> <span class="token string">&quot;\\\\&quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.png&quot;</span>
  <span class="token comment"># 截屏</span>
  driver<span class="token punctuation">.</span>save_screenshot<span class="token punctuation">(</span>picture_name1<span class="token punctuation">)</span>
  ce <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span>
  <span class="token comment"># 获取坐标</span>
  left <span class="token operator">=</span> ce<span class="token punctuation">.</span>location<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span>
  top <span class="token operator">=</span> ce<span class="token punctuation">.</span>location<span class="token punctuation">[</span><span class="token string">&quot;y&quot;</span><span class="token punctuation">]</span>
  right <span class="token operator">=</span> ce<span class="token punctuation">.</span>location<span class="token punctuation">[</span><span class="token string">&quot;weight&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> left
  bottom <span class="token operator">=</span> ce<span class="token punctuation">.</span>location<span class="token punctuation">[</span><span class="token string">&quot;height&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> top
  <span class="token comment"># 从截图中抠出验证码</span>
  im <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>picture_name1<span class="token punctuation">)</span>
  img <span class="token operator">=</span> im<span class="token punctuation">.</span>crop<span class="token punctuation">(</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment"># 保存抠出的验证码图片</span>
  t <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
  picture_name2 <span class="token operator">=</span> path <span class="token operator">+</span> <span class="token string">&quot;\\\\&quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.png&quot;</span>
  img<span class="token punctuation">.</span>save<span class="token punctuation">(</span>picture_name2<span class="token punctuation">)</span> <span class="token comment"># 这就是验证码图片</span>
  <span class="token keyword">return</span> picture_name2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用第三方的-api-来识别验证码" tabindex="-1"><a class="header-anchor" href="#使用第三方的-api-来识别验证码" aria-hidden="true">#</a> 使用第三方的 API 来识别验证码</h2><p>这个就看个人选择了</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2>`,58);function D(N,E){const t=l("ExternalLinkIcon");return o(),i("div",null,[u,n("table",null,[m,n("tbody",null,[k,n("tr",null,[v,b,n("td",null,[s("xpath，具体看"),n("a",h,[s("学爬虫利器 XPath,看这一篇就够了"),a(t)])])]),_,y,f,g,w,n("tr",null,[x,q,n("td",null,[s("css 选择器，具体看"),n("a",S,[s("CSS 选择器 - CSS：层叠样式表"),a(t)])])])])]),C])}const T=p(r,[["render",D],["__file","selenium.html.vue"]]);export{T as default};
