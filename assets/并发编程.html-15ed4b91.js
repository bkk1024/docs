const l=JSON.parse('{"key":"v-0f18917b","path":"/python/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B.html","title":"并发编程","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"程序提速方法","slug":"程序提速方法","link":"#程序提速方法","children":[]},{"level":2,"title":"python 对并发编程的支持","slug":"python-对并发编程的支持","link":"#python-对并发编程的支持","children":[]},{"level":2,"title":"多线程Thread、多进程Process、多协程Coroutine","slug":"多线程thread、多进程process、多协程coroutine","link":"#多线程thread、多进程process、多协程coroutine","children":[{"level":3,"title":"CPU密集型计算、IO密集型计算","slug":"cpu密集型计算、io密集型计算","link":"#cpu密集型计算、io密集型计算","children":[]},{"level":3,"title":"多线程、多进程、多协程的比较","slug":"多线程、多进程、多协程的比较","link":"#多线程、多进程、多协程的比较","children":[]}]},{"level":2,"title":"创建多线程的方法","slug":"创建多线程的方法","link":"#创建多线程的方法","children":[]},{"level":2,"title":"简单比较单线程和多线程的速度","slug":"简单比较单线程和多线程的速度","link":"#简单比较单线程和多线程的速度","children":[]},{"level":2,"title":"实现生产者-消费者模式爬虫架构","slug":"实现生产者-消费者模式爬虫架构","link":"#实现生产者-消费者模式爬虫架构","children":[{"level":3,"title":"多组件的Pipeline技术架构","slug":"多组件的pipeline技术架构","link":"#多组件的pipeline技术架构","children":[]},{"level":3,"title":"生产者-消费者爬虫架构","slug":"生产者-消费者爬虫架构","link":"#生产者-消费者爬虫架构","children":[]},{"level":3,"title":"多线程数据通信","slug":"多线程数据通信","link":"#多线程数据通信","children":[]},{"level":3,"title":"生产者-消费者爬虫简单实例","slug":"生产者-消费者爬虫简单实例","link":"#生产者-消费者爬虫简单实例","children":[]}]},{"level":2,"title":"python 线程安全问题和解决方案","slug":"python-线程安全问题和解决方案","link":"#python-线程安全问题和解决方案","children":[{"level":3,"title":"线程安全","slug":"线程安全","link":"#线程安全","children":[]},{"level":3,"title":"Lock 用于解决线程安全问题","slug":"lock-用于解决线程安全问题","link":"#lock-用于解决线程安全问题","children":[]}]},{"level":2,"title":"python好用的线程池ThreadPoolExecutor","slug":"python好用的线程池threadpoolexecutor","link":"#python好用的线程池threadpoolexecutor","children":[{"level":3,"title":"线程池的原理","slug":"线程池的原理","link":"#线程池的原理","children":[]},{"level":3,"title":"使用线程池的好处","slug":"使用线程池的好处","link":"#使用线程池的好处","children":[]},{"level":3,"title":"ThreadPoolExecutor的使用语法","slug":"threadpoolexecutor的使用语法","link":"#threadpoolexecutor的使用语法","children":[]}]},{"level":2,"title":"在 Web 服务中使用线程池实现加速","slug":"在-web-服务中使用线程池实现加速","link":"#在-web-服务中使用线程池实现加速","children":[]},{"level":2,"title":"使用多进程 multiprocessing 模块加速程序","slug":"使用多进程-multiprocessing-模块加速程序","link":"#使用多进程-multiprocessing-模块加速程序","children":[{"level":3,"title":"为什么有了多线程，还要使用多进程","slug":"为什么有了多线程-还要使用多进程","link":"#为什么有了多线程-还要使用多进程","children":[]},{"level":3,"title":"多进程知识梳理","slug":"多进程知识梳理","link":"#多进程知识梳理","children":[]}]},{"level":2,"title":"在 web 服务中使用多进程加速","slug":"在-web-服务中使用多进程加速","link":"#在-web-服务中使用多进程加速","children":[]},{"level":2,"title":"异步IO实现并发爬虫","slug":"异步io实现并发爬虫","link":"#异步io实现并发爬虫","children":[{"level":3,"title":"协程：在单线程中实现并发","slug":"协程-在单线程中实现并发","link":"#协程-在单线程中实现并发","children":[]},{"level":3,"title":"异步IO库：asyncio","slug":"异步io库-asyncio","link":"#异步io库-asyncio","children":[]},{"level":3,"title":"异步IO爬虫示例：","slug":"异步io爬虫示例","link":"#异步io爬虫示例","children":[]},{"level":3,"title":"使用信号量控制异步IO的并发量","slug":"使用信号量控制异步io的并发量","link":"#使用信号量控制异步io的并发量","children":[]}]}],"git":{"createdTime":1685609880000,"updatedTime":1685616956000,"contributors":[{"name":"libokai","email":"1204441099@qq.com","commits":2}]},"readingTime":{"minutes":10.58,"words":3173},"filePathRelative":"python/并发编程.md","localizedDate":"2023年6月1日","excerpt":""}');export{l as data};
