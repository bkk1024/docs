import{_ as n,W as s,X as a,a0 as t}from"./framework-4f54a744.js";const e={},p=t(`<h1 id="vue3-一些自定义指令" tabindex="-1"><a class="header-anchor" href="#vue3-一些自定义指令" aria-hidden="true">#</a> vue3 一些自定义指令</h1><h2 id="v-focus-输入框自动聚焦" tabindex="-1"><a class="header-anchor" href="#v-focus-输入框自动聚焦" aria-hidden="true">#</a> v-focus 输入框自动聚焦</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 自定义自定聚焦指令</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Directive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> vFocus<span class="token operator">:</span> Directive <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token function-variable function">mounted</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-move-自定义拖拽" tabindex="-1"><a class="header-anchor" href="#v-move-自定义拖拽" aria-hidden="true">#</a> v-move 自定义拖拽</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 自定义拖拽指令</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Directive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> vMove<span class="token operator">:</span> Directive <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token function">mounted</span><span class="token punctuation">(</span>el<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 这里遵循\`子绝父相\`的原则</span>
		<span class="token comment">// 这里如果写作 el.parentElement?.style.position = &#39;relative&#39; 会报错：赋值表达式的左侧不能是可选属性访问。</span>
		el<span class="token punctuation">.</span>parentElement<span class="token operator">?.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;style&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;position: relative&quot;</span><span class="token punctuation">)</span>
		el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&quot;absolute&quot;</span>

		<span class="token keyword">const</span> <span class="token function-variable function">mouseDown</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token comment">//鼠标点击物体那一刻相对于物体左侧边框的距离=点击时的位置相对于浏览器最左边的距离-物体左边框相对于浏览器最左边的距离</span>
			<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span> e<span class="token punctuation">.</span>clientY<span class="token punctuation">,</span> <span class="token string">&quot;-----起始&quot;</span><span class="token punctuation">,</span> el<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span>
			<span class="token keyword">let</span> <span class="token constant">X</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> el<span class="token punctuation">.</span>offsetLeft
			<span class="token keyword">let</span> <span class="token constant">Y</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> el<span class="token punctuation">.</span>offsetTop
			<span class="token keyword">const</span> <span class="token function-variable function">move</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> <span class="token constant">X</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span>
				el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> <span class="token constant">Y</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span>
				<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span> e<span class="token punctuation">.</span>clientY<span class="token punctuation">,</span> <span class="token string">&quot;---改变&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;mousemove&quot;</span><span class="token punctuation">,</span> move<span class="token punctuation">)</span>
			document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;mouseup&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;mousemove&quot;</span><span class="token punctuation">,</span> move<span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;mousedown&quot;</span><span class="token punctuation">,</span> mouseDown<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-upper-input-的第一个英文字母转变为大写" tabindex="-1"><a class="header-anchor" href="#v-upper-input-的第一个英文字母转变为大写" aria-hidden="true">#</a> v-upper，input 的第一个英文字母转变为大写</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 自定义指令，input 的第一个英文字母转变为大写</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Directive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> vUpper<span class="token operator">:</span> Directive <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token function-variable function">mounted</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vNode<span class="token punctuation">,</span> prevNode<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> value <span class="token operator">=</span> vNode<span class="token punctuation">.</span>target<span class="token operator">?.</span>value
		value <span class="token operator">=</span> value<span class="token operator">?.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token operator">?.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","vue3一些自定义指令.html.vue"]]);export{r as default};
